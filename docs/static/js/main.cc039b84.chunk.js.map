{"version":3,"sources":["components/AddCategory.js","services/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","URL_BASE_GIFS","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","url","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","img","key","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAsBhD,OAEI,0BAAMC,SAdW,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAxBc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,Y,uBCTnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEH,mCACVC,EAHa,iDAG6CC,UAAWH,GAHxD,6BAEH,oCAFG,SAMAI,MAAOF,GANP,cAMbG,EANa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KAWFC,EAAOD,EAAKE,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAEhC,MAAO,CACHF,GAAIA,EACJC,MAAOA,EACPE,IAAG,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAQE,iBAAiBD,QAvBnB,kBA4BZL,GA5BY,4CAAH,sDCIPO,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOE,EAAU,EAAVA,IAErC,OACI,yBAAKG,UAAU,8CACX,yBAAKC,IAAMJ,EAAMK,IAAMP,IACvB,2BAAKA,KCFJQ,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECJb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAZ,GACHU,EAAS,CACLf,KAAMK,EACNQ,SAAS,SAGtB,CAAEpB,IAEEqB,EDJ0BI,CAAczB,GAAlCY,EATwB,EAS7BL,KAAaa,EATgB,EAShBA,QAErB,OACI,oCACI,wBAAIJ,UAAU,4CAA6ChB,GAEzDoB,GAAW,+CAEb,yBAAKJ,UAAU,aAETJ,EAAOH,KAAK,SAAAiB,GAAG,OAEb,kBAAC,EAAD,eACIC,IAAKD,EAAIhB,IACJgB,UE1BhBE,EAAe,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IAKpB3C,mBAAU2C,GALU,mBAKjDC,EALiD,KAKrC7C,EALqC,KAaxD,OACI,oCACI,yBAAK+B,UAAU,uBACX,wBAAIA,UAAU,IAAd,iBAEJ,kBAAC,EAAD,CAAa/B,cAAgBA,IAC7B,6BAEA,4BAQQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OAEnB,kBAAC,EAAD,CACI2B,IAAQ3B,EACRA,SAAaA,U,YC7BzC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.cc039b84.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        \n        setInputValue( e.target.value );\n\n    }\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 1 ) {\n            \n            setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue('');\n\n        }\n    }\n\n    return (\n        \n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\" \n                value={inputValue}\n                onChange={ handleInputChange }/>\n\n        </form>\n    )\n}\n\nAddCategory.propTypes =  {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async( category ) => {\n\n    const api_key = '56DbjY2UNy36CgisExKyqNAEV5LsMd4X';\n    const URL_BASE_GIFS = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=${ api_key }`;\n    // const URL_BASE_STICKERS = `https://api.giphy.com/v1/stickers/search?q=${ tmp }&limit=10&api_key=${ api_key }`;\n\n    const resp = await fetch( URL_BASE_GIFS );\n    const { data } = await resp.json();\n\n    // const gifs = data.map( img => {\n    //     return {\n    //         id: img.id,\n    //         title: img.title,\n    //         url: img.images?.downsized_medium.url\n    //     }\n    // });\n\n    // DesestructuraciÃ³n\n    const gifs = data.map(({ id, title, images }) => {\n\n        return {\n            id: id,\n            title: title,\n            url: images?.downsized_medium.url\n        }\n\n    });\n\n    return gifs;\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__rubberBand\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n// import React, { useState, useEffect } from 'react'\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../services/GetGifs';\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([]);\n\n    // useEffect( () => {\n    //     getGifs( category )\n    //         .then( setImages );\n    // }, [ category ]);\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeInTopLeft\">{ category }</h3>\n\n            { loading && <p>Loading.........</p> }\n\n            <div className=\"card-grid\">\n\n                { images.map( img => (\n\n                    <GifGridItem \n                        key={img.id}\n                        { ...img }>\n\n                    </GifGridItem>\n\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    category: PropTypes.string.isRequired\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../services/GetGifs';  \n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( images => {\n                setState({\n                    data: images,\n                    loading: false\n                });\n            });\n    }, [ category ]);\n\n    return state;\n\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = ({ defaultCategories = [] }) => {\n\n    // const categories = ['Dragon Ball', 'Paw Patrol', 'Samurai X'];\n\n    // const [categories, setCategories] = useState( ['Dragon Ball'] );\n    const [categories, setCategories] = useState( defaultCategories );\n    \n    // const handleAdd = () => {\n\n    //     // setCategories([ ...categories, 'Charly' ]);\n    //     setCategories( cats => [ ...cats, 'Charly' ] );\n    // };\n\n    return (\n        <>  \n            <div className=\"alert alert-primary\">\n                <h2 className=\"\">GifExpertApp</h2>\n            </div>\n            <AddCategory setCategories={ setCategories }></AddCategory>\n            <hr/>\n\n            <ol>\n                {\n                    // categories.map(category => {\n\n                    //     return <li key = { category } >{ category }</li> \n\n                    // })\n\n                    categories.map(category => (\n\n                        <GifGrid \n                            key = { category }\n                            category = { category }\n                        />\n                        \n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}